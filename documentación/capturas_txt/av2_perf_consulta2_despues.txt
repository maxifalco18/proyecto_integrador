                                                                                                                      QUERY PLAN                                                                                                

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------                                                                                                                                                                                                         Nested Loop  (cost=161222.02..161745.00 rows=453 width=52) (actual time=8028.912..8028.915 rows=1 loops=1)
   Output: s.product_id, (count(DISTINCT s.customer_id)), (count(DISTINCT sales_clean.customer_id)), round(((((count(DISTINCT s.customer_id)))::numeric / (NULLIF((count(DISTINCT sales_clean.customer_id)), 0))::numeric) * '1
00'::numeric), 2)                                                                                                                                                                                                                 Buffers: shared hit=25561 read=60723, temp read=19845 written=19883
   ->  Aggregate  (cost=161221.59..161221.60 rows=1 width=8) (actual time=8014.585..8014.586 rows=1 loops=1)
         Output: count(DISTINCT sales_clean.customer_id)
         Buffers: shared hit=16069 read=60679, temp read=19845 written=19883
         ->  Seq Scan on stg.sales_clean  (cost=0.00..144326.27 rows=6758127 width=4) (actual time=0.105..1974.474 rows=6758127 loops=1)
               Output: sales_clean.sales_id, sales_clean.salesperson_id, sales_clean.customer_id, sales_clean.product_id, sales_clean.quantity, sales_clean.discount, sales_clean.total_price, sales_clean.sales_date, sales_cl
ean.transaction_number                                                                                                                                                                                                                        Buffers: shared hit=16066 read=60679
   ->  GroupAggregate  (cost=0.43..507.54 rows=453 width=12) (actual time=14.305..14.305 rows=1 loops=1)
         Output: s.product_id, count(DISTINCT s.customer_id)
         Group Key: s.product_id
         Buffers: shared hit=9492 read=44
         ->  Index Only Scan using idx_sales_product_customer on stg.sales_clean s  (cost=0.43..428.66 rows=14870 width=8) (actual time=1.706..11.674 rows=15305 loops=1)
               Output: s.product_id, s.customer_id
               Index Cond: (s.product_id = 103)
               Heap Fetches: 2
               Buffers: shared hit=9492 read=44
 Planning:
   Buffers: shared hit=95 read=2
 Planning Time: 2.270 ms
 JIT:
   Functions: 8
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.078 ms, Inlining 0.000 ms, Optimization 0.558 ms, Emission 50.612 ms, Total 52.249 ms
 Execution Time: 8331.882 ms
(26 rows)
